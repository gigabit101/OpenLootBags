
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'

version = "0.0.1"

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
    version = version + "." + "${System.getenv().BUILD_NUMBER}"
}

group= "com.gigabit101.voidworlds" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "openlootbag"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me/"
    }
    maven {
        name "Prog"
        url "http://dvs1.progwml6.com/files/maven"
    }
}

minecraft {
    version = "1.10.2-12.18.1.2050"
    runDir = "run"
    mappings = 'snapshot_20160810'
	replace "@MODVERSION@", project.version
}

dependencies {
    compile 'RebornCore:RebornCore-1.10.2:+:dev'
	deobfCompile "mezz.jei:jei_1.10.2:+"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    exclude "**/*.psd"
    classifier = 'dev'
}

jar {
    exclude "**/*.psd"
    classifier = 'universal'
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
        include 'gigabit101/openlootbag/api/**/*'

    classifier = "api"
}

apiJar.mustRunAfter deobfJar

artifacts {
    archives deobfJar
    archives apiJar
}

build.dependsOn deobfJar, apiJar

uploadArchives {
    repositories {
        mavenDeployer {
		if (project.hasProperty('mavenPass'))
        {
            repository(url: "http://mavenupload.modmuss50.me/") {
                authentication(userName: "buildslave", password: project.getProperty('mavenPass'))
            }
        }
        else
        {
           repository(url: "file:///var/www/maven/")
        }
            pom {
                groupId = "openlootbag"
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'openlootbag'
                    url 'https://github.com/gigabit101/openlootbag'
                    scm {
                        url 'https://github.com/gigabit101/openlootbag'
                        connection 'scm:git:git@github.com:gigabit101/openlootbag.git'
                        developerConnection 'scm:git:git@github.com:gigabit101/openlootbag.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/gigabit101/openlootbag/issues'
                    }
                    licenses {
                        license {
                            name 'License'
                            url 'https://raw.githubusercontent.com/gigabit101/openlootbag/master/LICENSE.md'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'modmuss50'
                            name 'modmuss50'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Gigabit101'
                            name 'Gigabit101'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}

